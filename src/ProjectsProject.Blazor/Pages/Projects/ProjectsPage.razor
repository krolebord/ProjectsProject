@page "/projects"

@using ProjectsProject.Localization
@using ProjectsProject.Projects
@using NUglify
@using Severity=ProjectsProject.Enums.Severity
@inherits Volo.Abp.AspNetCore.Components.Web.BasicTheme.Components.MudCrudPageBase<ProjectsProject.Projects.IProjectsAppService, ProjectsProject.Projects.ProjectDto, Guid, Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, ProjectsProject.Projects.ProjectWriteDto>
@inject AbpBlazorMessageLocalizerHelper<ProjectsProjectResource> LH

<MudDataGrid T="ProjectDto"
             @ref="DataGrid"
             Striped="true"
             Hideable="true"
             Elevation="8"
             ServerData="LoadServerData">
<ToolBarContent>
    <MudText Typo="Typo.h5">@L["Projects"]</MudText>
    <MudSpacer />
    <MudButton Color="Color.Primary"
               Variant="Variant.Outlined"
               Disabled="!HasCreatePermission"
               OnClick="OpenCreateModalAsync">
        @L["NewProject"]
    </MudButton>
</ToolBarContent>
<Columns>
    <MudBlazor.Column T="ProjectDto"
                      Field="@nameof(ProjectDto.Id)"
                      Hideable="false"
                      Title="@L["Actions"]">
        <CellTemplate>
            @if (HasUpdatePermission)
            {
                <MudIconButton Icon="fas fa-edit" 
                               OnClick="@(async _ => { await OpenEditModalAsync(context.Item); })"
                               Size="Size.Small" />
            }
            @if (HasDeletePermission)
            {   
                <MudIconButton Icon="fas fa-trash" 
                               OnClick="@(async _ => { await DeleteEntityAsync(context.Item);} )"
                               Size="Size.Small" />
            }
        </CellTemplate>
    </MudBlazor.Column>
    <MudBlazor.Column T="ProjectDto"
                      Field="@nameof(ProjectDto.Name)"
                      Hideable="false"
                      Title=@L["Name"] />
    <MudBlazor.Column T="ProjectDto"
                      Field="@nameof(ProjectDto.Description)"
                      Title=@L["Description"] />
</Columns>
</MudDataGrid>

<MudDialog @bind-IsVisible="CreateDialogVisible" 
           Options="DialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">@L["NewProject"]</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@NewEntity"
                 @ref="CreateForm">
            <MudTextField @bind-Value="@NewEntity.Name" 
                          Label=@L["Name"]
                          For=@(() => NewEntity.Name) />
            <br />
            <MudTextField @bind-Value="@NewEntity.Description" 
                          Label=@L["Description"]
                          For=@(() => NewEntity.Description) />
            <br />
            <MudSelect T="Severity" 
                       @bind-Value="NewEntity.Severity"
                       Label=@L["Severity"]>
                @foreach (Severity severityValue in Enum.GetValues<Severity>())
                {
                    <MudSelectItem Value="@severityValue">
                        @L[$"Enum:Severity:{(int)severityValue}"]
                    </MudSelectItem>
                }
            </MudSelect>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" 
                   OnClick="CloseCreateModalAsync">
            @L["Cancel"]
        </MudButton>
        <MudButton Variant="Variant.Filled" 
                   Color="Color.Primary" 
                   OnClick="CreateEntityAsync">
            @L["Save"]
        </MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-IsVisible="EditDialogVisible"
           Options="DialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">@EditingEntity.Name</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@EditingEntity"
                 @ref="EditForm">
            <MudTextField @bind-Value="@EditingEntity.Name" 
                          Label=@L["Name"]
                          For=@(() => EditingEntity.Name) />
            <br />
            <MudTextField @bind-Value="@EditingEntity.Description" 
                          Label=@L["Description"]
                          For=@(() => EditingEntity.Description) />
            <br />
            <MudSelect T="Severity" 
                       @bind-Value="EditingEntity.Severity"
                       Label=@L["Severity"]>
                @foreach (Severity severityValue in Enum.GetValues<Severity>())
                {
                    <MudSelectItem Value="@severityValue">
                        @L[$"Enum:Severity:{(int)severityValue}"]
                    </MudSelectItem>
                }
            </MudSelect>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" 
                   OnClick="CloseEditModalAsync">
            @L["Cancel"]
        </MudButton>
        <MudButton Variant="Variant.Filled" 
                   Color="Color.Primary" 
                   OnClick="UpdateEntityAsync">
            @L["Save"]
        </MudButton>
    </DialogActions>
</MudDialog>

@code
{
    public ProjectsPage()
    {
        LocalizationResource = typeof(Resource);
    }
}
