@page "/labels"
@using ProjectsProject.Localization
@using ProjectsProject.Labels
@inherits Volo.Abp.AspNetCore.Components.Web.BasicTheme.Components.MudCrudPageBase<ProjectsProject.Labels.ILabelsAppService, ProjectsProject.Labels.LabelShortDto, Guid, Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, ProjectsProject.Labels.LabelWriteDto>
@inject AbpBlazorMessageLocalizerHelper<ProjectsProjectResource> LH

@{
    RenderFragment<LabelWriteDto> labelForm = dto => @<div>
        <MudTextField @bind-Value="@dto.Name" 
                      Label=@L["Name"]
                      For=@(() => dto.Name) />
        <br />
        <MudTextField @bind-Value="@dto.Description"
                      Label=@L["Description"]
                      For=@(() => dto.Description) />
        <br />
        <MudColorPicker @bind-Text="@dto.Color"
                        DisableAlpha="true"
                        Label="Color"/>
        <br />
        <MudField Label="Preview">
            <LabelChip Name="@dto.Name" Color="@dto.Color" Description="@dto.Description"/>
        </MudField>
    </div>;
}

<MudDataGrid T="LabelShortDto"
             @ref="DataGrid"
             Striped="true"
             Hideable="true"
             Elevation="8"
             ServerData="LoadServerData">
    <ToolBarContent>
        <MudText Typo="Typo.h5">@L["Labels"]</MudText>
        <MudSpacer />
        <MudButton Color="Color.Primary"
                   Variant="Variant.Outlined"
                   Disabled="!HasCreatePermission"
                   OnClick="OpenCreateModalAsync">
            @L["NewLabel"]
        </MudButton>
    </ToolBarContent>
    <Columns>
        <MudBlazor.Column T="LabelShortDto"
                          Field="@nameof(LabelShortDto.Id)"
                          Hideable="false"
                          Title="@L["Actions"]">
            <CellTemplate>
                @if (HasUpdatePermission)
                {
                    <MudIconButton Icon="fas fa-edit" 
                                   OnClick="@(async _ => { await OpenEditModalAsync(context.Item); })"
                                   Size="Size.Small" />
                }
                @if (HasDeletePermission)
                {   
                    <MudIconButton Icon="fas fa-trash" 
                                   OnClick="@(async _ => { await DeleteEntityAsync(context.Item);} )"
                                   Size="Size.Small" />
                }
            </CellTemplate>
        </MudBlazor.Column>
        <MudBlazor.Column T="LabelShortDto"
                          Field="@nameof(LabelShortDto.Name)"
                          Hideable="false"
                          Title=@L["Name"]>
            <CellTemplate>
                <LabelChip Label="@context.Item" />
            </CellTemplate>
        </MudBlazor.Column>
        <MudBlazor.Column T="LabelShortDto"
                          Field="@nameof(LabelShortDto.Description)"
                          Hideable="false"
                          Title=@L["Description"] />
    </Columns>
</MudDataGrid>

<MudDialog @bind-IsVisible="CreateDialogVisible" 
           Options="DialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">@L["NewLabel"]</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@NewEntity"
                 @ref="CreateForm">
            @labelForm(NewEntity)
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" 
                   OnClick="CloseCreateModalAsync">
            @L["Cancel"]
        </MudButton>
        <MudButton Variant="Variant.Filled" 
                   Color="Color.Primary" 
                   OnClick="CreateEntityAsync">
            @L["Save"]
        </MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-IsVisible="EditDialogVisible"
           Options="DialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">@EditingEntity.Name</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@EditingEntity"
                 @ref="EditForm">
            @labelForm(EditingEntity)
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" 
                   OnClick="CloseEditModalAsync">
            @L["Cancel"]
        </MudButton>
        <MudButton Variant="Variant.Filled" 
                   Color="Color.Primary" 
                   OnClick="UpdateEntityAsync">
            @L["Save"]
        </MudButton>
    </DialogActions>
</MudDialog>

@code
{
    public LabelsPage()
    {
        LocalizationResource = typeof(ProjectsProjectResource);
    }
}
